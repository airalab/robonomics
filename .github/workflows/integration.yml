name: Integration
on:
  push:
    branches:
    - master
  create:
    tags:
    - v*

jobs:
  binary:
    name: ${{ matrix.target }}
    runs-on: ubuntu-18.04 
    strategy:
      matrix:
        target:
        - x86_64-pc-windows-gnu
        - x86_64-unknown-linux-gnu
        - aarch64-unknown-linux-gnu
        - armv7-unknown-linux-gnueabihf

    env:
      EXE_EXT: ${{ contains(matrix.target, 'windows') && '.exe' || '' }}
      LIBZ_SYS_STATIC: 1
      NIGHTLY_RUST: nightly-2020-12-29

    steps:
    - name: Checkout the source code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ NIGHTLY_RUST }} 
        target: ${{ matrix.target }} 
        default: true

    - name: Add WASM target
      run: rustup target add wasm32-unknown-unknown --toolchain ${{ NIGHTLY_RUST }} 

    - name: Build optimized binary
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ toJSON(matrix.target != 'x86_64-unknown-linux-gnu') }}
        command: build
        args: --release --locked --target=${{ matrix.target }}

    - uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.target }}
        path: target/release/robonomics${{ env.EXE_EXT }}

  nixos:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout the source code
      uses: actions/checkout@v2
      with:
        submodules: true

    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-20.09

    - name: Build using Nix shell
      run: nix-shell --run "cargo build --release"

  docker:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout the source code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: robonomics/robonomics
        tag-custom: latest
        tag-sha: true # add git short SHA as Docker tag

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2020-12-29
        target: wasm32-unknown-unknown 
        default: true

    - name: Build optimized binary
      run: |
        cargo build --locked --release
        cp target/release/robonomics scripts/docker

    - name: Push docker image
      uses: docker/build-push-action@v2
      with:
        context: scripts/docker 
        platforms: linux/amd64
        labels: ${{ steps.docker_meta.outputs.labels }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        push: true

  docs:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout the source code
      uses: actions/checkout@v2
      with:
        submodules: true

    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-20.09

    - name: Build crates documentation
      run: nix-shell --run "cargo doc --all --no-deps"

    - name: Push index.html
      run: echo "<meta http-equiv=\"refresh\" content=\"0; URL='./robonomics_protocol/index.html'\" />" > ./target/doc/index.html

    - name: Deploy crates.robonomics.network
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/doc
        cname: crates.robonomics.network
