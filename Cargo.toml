[package]
name = "robonomics-node"
version = "0.10.2"
authors = ["Airalab <research@aira.life>"]
build = "build.rs"
edition = "2018"

[[bin]]
name = "robonomics"
path = "src/main.rs"

[dependencies]
log = "0.4"
tokio = "0.1.7"
futures = "0.1"
serde_json = "1.0"
hex-literal = "0.1"
error-chain = "0.12"
exit-future = "0.1"
parking_lot = "0.4"
ctrlc = { version = "3.0", features = ["termination"] }
transaction_pool = { package = "substrate-transaction-pool", git = "https://github.com/paritytech/substrate" }
basic-authorship = { package = "substrate-basic-authorship", git = "https://github.com/paritytech/substrate" }
grandpa = { package = "substrate-finality-grandpa", git = "https://github.com/paritytech/substrate" }
consensus = { package = "substrate-consensus-aura", git = "https://github.com/paritytech/substrate" }
primitives = { package = "substrate-primitives", git = "https://github.com/paritytech/substrate" }
telemetry = { package = "substrate-telemetry", git = "https://github.com/paritytech/substrate" }
inherents = { package = "substrate-inherents", git = "https://github.com/paritytech/substrate" }
keystore = { package = "substrate-keystore", git = "https://github.com/paritytech/substrate" }
executor = { package = "substrate-executor", git = "https://github.com/paritytech/substrate" }
network = { package = "substrate-network", git = "https://github.com/paritytech/substrate" }
client = { package = "substrate-client", git = "https://github.com/paritytech/substrate", default-features = false }
substrate-service = { git = "https://github.com/paritytech/substrate" }
substrate-cli = { git = "https://github.com/paritytech/substrate" }
ros-integration = { path = "ros-integration", optional = true }
chain-rpc-ros = { path = "chain-rpc-ros", optional = true }
robonomics-runtime = { path = "runtime" }

[features]
default = []

## Enable ROS integration: exports to ROS topics and services for Robonomics communication.
# To build with it install ROS (http://wiki.ros.org/melodic/Installation) before.
# It also require roscore to be launched to start.
ros = [ 'ros-integration', 'chain-rpc-ros' ]

[build-dependencies]
vergen = "3"

[workspace]
members = [ "runtime", "ros-integration", "chain-rpc-ros" ]
exclude = [ "runtime/wasm" ]

[badges]
travis-ci = { repository = "airalab/substrate-node-robonomics", branch = "master" }
maintenance = { status = "actively-developed" }
is-it-maintained-issue-resolution = { repository = "airalab/substrate-node-robonomics" }
is-it-maintained-open-issues = { repository = "airalab/substrate-node-robonomics" }

[profile.release]
# Substrate runtime requires unwinding.
panic = "unwind"
